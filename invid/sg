provider "aws" {
  region = "us-west-2"
}

# Define locals for the 5 security group rules in a single line
locals {
  ingress_rules = [
    { from_port = 80, to_port = 80, protocol = "tcp", cidr_blocks = ["0.0.0.0/0"] },
    { from_port = 443, to_port = 443, protocol = "tcp", cidr_blocks = ["0.0.0.0/0"] },
    { from_port = 22, to_port = 22, protocol = "tcp", cidr_blocks = ["192.168.1.0/24"] },
    { from_port = 3306, to_port = 3306, protocol = "tcp", security_groups = [aws_security_group.db_sg.id] }
  ]
  egress_rules = [
    { from_port = 0, to_port = 65535, protocol = "tcp", cidr_blocks = ["0.0.0.0/0"] }
  ]
}

# Create the security group resource
resource "aws_security_group" "eks_sg" {
  name        = "eks-sg"
  description = "Security group for EKS cluster"
  vpc_id      = var.vpc_id

  # Dynamically adding ingress rules
  dynamic "ingress" {
    for_each = local.ingress_rules
    content {
      from_port      = ingress.value.from_port
      to_port        = ingress.value.to_port
      protocol       = ingress.value.protocol
      cidr_blocks    = ingress.value.cidr_blocks
      security_groups = ingress.value.security_groups
    }
  }

  # Dynamically adding egress rules
  dynamic "egress" {
    for_each = local.egress_rules
    content {
      from_port   = egress.value.from_port
      to_port     = egress.value.to_port
      protocol    = egress.value.protocol
      cidr_blocks = egress.value.cidr_blocks
    }
  }
}

# Example input variable for VPC ID
variable "vpc_id" {
  description = "VPC ID where the EKS cluster will be deployed"
}

# Example security group for the database
resource "aws_security_group" "db_sg" {
  name        = "db_sg"
  description = "Database Security Group"
  vpc_id      = var.vpc_id
}
